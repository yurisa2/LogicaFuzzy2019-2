q()
install.packages("imager")
library(imager) # TEM QUE INSTALAR, UTILIZANDO O INSTALADOR DE PACOTES DO R MESMO
# 1 Laranjas
laranjaspath <- '/home/yurisa2/lampstack-5.6.22-0/apache2/htdocs/rpdi/img/laranjas.jpg' # CAMINHO DA IMAGEM NA SUA MAQUINA
c <- load.image(laranjaspath)
plot(c)
cr <- R(c)
plot(cr)
cg <- G(c)
library(imager) # TEM QUE INSTALAR, UTILIZANDO O INSTALADOR DE PACOTES DO R MESMO
# 1 Laranjas
laranjaspath <- '/home/yurisa2/lampstack-5.6.22-0/apache2/htdocs/rpdi/img/laranjas.jpg' # CAMINHO DA IMAGEM NA SUA MAQUINA
library(imager) # TEM QUE INSTALAR, UTILIZANDO O INSTALADOR DE PACOTES DO R MESMO
# 1 Laranjas
laranjaspath <- '/home/yurisa2/lampstack-5.6.22-0/apache2/htdocs/rpdi/img/laranjas.jpg' # CAMINHO DA IMAGEM NA SUA MAQUINA
c <- load.image(laranjaspath)
library(imager) # TEM QUE INSTALAR, UTILIZANDO O INSTALADOR DE PACOTES DO R MESMO
# 1 Laranjas
laranjaspath <- 'C:/Users/Administrator/Documents/rPDI/img/laranjas.jpg' # CAMINHO DA IMAGEM NA SUA MAQUINA
c <- load.image(laranjaspath)
plot(c)
cr <- R(c)
plot(cr)
cg <- G(c)
plot(cg)
cb <- B(c)
plot(cb)
par(mfrow=c(2,2))
plot(c)
plot(cr)
plot(cg)
plot(cb)
par(mfrow=c(1,1))
masppath <- 'C:/Users/Administrator/Documents/rPDI/img/masp.jpg'
plot(c);
PBA <- grayscale(c)
plot(PBA)
hist(PBA)
c <- load.image(masppath)
# 3 Contraste Melhorado
masppath <- 'C:/Users/Administrator/Documents/rPDI/img/masp.jpg'
plot(c);
c <- load.image(masppath)
dev.off()
library(imager) # TEM QUE INSTALAR, UTILIZANDO O INSTALADOR DE PACOTES DO R MESMO
# 1 Laranjas
laranjaspath <- 'C:/Users/Administrator/Documents/rPDI/img/laranjas.jpg' # CAMINHO DA IMAGEM NA SUA MAQUINA
c <- load.image(laranjaspath)
plot(c)
cr <- R(c)
plot(cr)
cg <- G(c)
plot(cg)
library(imager) # TEM QUE INSTALAR, UTILIZANDO O INSTALADOR DE PACOTES DO R MESMO
# 1 Laranjas
laranjaspath <- 'C:/Users/Administrator/Documents/rPDI/img/laranjas.jpg' # CAMINHO DA IMAGEM NA SUA MAQUINA
c <- load.image(laranjaspath)
plot(c)
library(imager) # TEM QUE INSTALAR, UTILIZANDO O INSTALADOR DE PACOTES DO R MESMO
# 1 Laranjas
laranjaspath <- 'C:/Users/Administrator/Documents/rPDI/img/laranjas.jpg' # CAMINHO DA IMAGEM NA SUA MAQUINA
c <- load.image(laranjaspath)
plot(c)
cr <- R(c)
plot(cr)
cg <- G(c)
plot(cg)
hist(PBA)
library(imager) # TEM QUE INSTALAR, UTILIZANDO O INSTALADOR DE PACOTES DO R MESMO
# 1 Laranjas
laranjaspath <- 'C:/Users/Administrator/Documents/rPDI/img/laranjas.jpg' # CAMINHO DA IMAGEM NA SUA MAQUINA
c <- load.image(laranjaspath)
plot(c)
cr <- R(c)
plot(cr)
cg <- G(c)
plot(cg)
cb <- B(c)
plot(cb)
par(mfrow=c(2,2))
plot(c)
plot(cr)
plot(cg)
plot(cb)
par(mfrow=c(1,1))
# 2 MASP
masppath <- 'C:/Users/Administrator/Documents/rPDI/img/masp.jpg'
c <- load.image(masppath)
plot(c);
PBA <- grayscale(c)
plot(PBA)
hist(PBA)
# 3 Contraste Melhorado
masppath <- 'C:/Users/Administrator/Documents/rPDI/img/masp.jpg'
c <- load.image(masppath)
plot(c);
PBA <- grayscale(c)
PBA <- PBA + 100
hist(PBA)
PBA <- 255*(PBA-100)/128
plot(PBA)
# 4 Ajuste imagem original
masppath <- 'C:/Users/Administrator/Documents/rPDI/img/masp.jpg'
c <- load.image(masppath)
plot(c);
PBA <- grayscale(c)
PBA <- 255*(PBA-100)/132
plot(PBA)
plot(c);
# 1 Laranjas
laranjaspath <- 'C:/Users/Administrator/Documents/rPDI/img/laranjas.jpg' # CAMINHO DA IMAGEM NA SUA MAQUINA
c <- load.image(laranjaspath)
plot(c)
install.packages("imager")
plot(cr)
library(imager) # TEM QUE INSTALAR, UTILIZANDO O INSTALADOR DE PACOTES DO R MESMO
# 1 Laranjas
laranjaspath <- 'C:/Users/Administrator/Documents/rPDI/img/laranjas.jpg' # CAMINHO DA IMAGEM NA SUA MAQUINA
c <- load.image(laranjaspath)
plot(c)
c
plot(c)
cr <- R(c)
plot(cr)
cg <- G(c)
plot(cg)
cb <- B(c)
plot(cb)
library(imager) # TEM QUEINSTALAR, UTILIZANDO O INSTALADOR DE PACOTES DO R MESMO
# 1 Laranjas
laranjaspath <- 'C:/Users/Administrator/Documents/rPDI/img/laranjas.jpg' # CAMINHO DA IMAGEM NA SUA MAQUINA
install.packages("imager")
library(imager) # TEM QUEINSTALAR, UTILIZANDO O INSTALADOR DE PACOTES DO R MESMO
# 1 Laranjas
laranjaspath <- 'C:/Users/Administrator/Documents/rPDI/img/laranjas.jpg' # CAMINHO DA IMAGEM NA SUA MAQUINA
c <- load.image(laranjaspath)
plot(c)
library(imager) # TEM QUE INSTALAR, UTILIZANDO O INSTALADOR DE PACOTES DO R MESMO
# 1 Laranjas
laranjaspath <- 'C:/Users/Administrator/Documents/rPDI/img/laranjas.jpg' # CAMINHO DA IMAGEM NA SUA MAQUINA
c <- load.image(laranjaspath)
plot(c)
library(imager) # TEM QUE INSTALAR, UTILIZANDO O INSTALADOR DE PACOTES DO R MESMO
# 1 Laranjas
laranjaspath <- 'C:/Users/Administrator/Documents/rPDI/img/laranjas.jpg' # CAMINHO DA IMAGEM NA SUA MAQUINA
c <- load.image(laranjaspath)
plot(c)
cr <- R(c)
plot(cr)
cg <- G(c)
plot(cg)
cb <- B(c)
plot(cb)
par(mfrow=c(2,2))
plot(c)
plot(cr)
plot(cg)
plot(cb)
par(mfrow=c(1,1))
# 2 MASP
masppath <- 'C:/Users/Administrator/Documents/rPDI/img/masp.jpg'
c <- load.image(masppath)
plot(c);
PBA <- grayscale(c)
plot(PBA)
hist(PBA)
# 3 Contraste Melhorado
masppath <- 'C:/Users/Administrator/Documents/rPDI/img/masp.jpg'
c <- load.image(masppath)
plot(c);
PBA <- grayscale(c)
PBA <- PBA + 100
hist(PBA)
PBA <- 255*(PBA-100)/128
plot(PBA)
# 4 Ajuste imagem original
masppath <- 'C:/Users/Administrator/Documents/rPDI/img/masp.jpg'
c <- load.image(masppath)
plot(c);
PBA <- grayscale(c)
PBA <- 255*(PBA-100)/132
plot(PBA)
plotmf(fis_TP,"output",1)
library("FuzzyR")
fis_TP <- newfis("Tanque Percolação")
#adiciona variaveis
fis_TP <- addvar(fis, "input", "CN", c(0,100))
fis_TP <- addvar(fis_TP, "input", "Declividade", c(0,160))
fis_TP <- addvar(fis_TP, "input", "Permeabilidade", c(0,1))
fis_TP <- addvar(fis_TP, "output", "TPercolacao", c(0,1))
#Cria Membership Functions
fis_TP <- addmf(fis_TP, "input", 1, "baixa", "trimf", c(0,0,60))
fis_TP <- addmf(fis_TP, "input", 1, "media", "trimf", c(0,60,100))
fis_TP <- addmf(fis_TP, "input", 1, "alta", "trimf", c(60,100,100))
fis_TP <- addmf(fis_TP, "input", 2, "baixa", "trimf", c(0,0,30))
fis_TP <- addmf(fis_TP, "input", 2, "media", "trimf", c(0,30,160))
fis_TP <- addmf(fis_TP, "input", 2, "alta", "trimf", c(30,160,160))
fis_TP <- addmf(fis_TP, "input", 3, "baixa", "trimf", c(0,0,0.5))
fis_TP <- addmf(fis_TP, "input", 3, "media", "trimf", c(0,0.5,1))
fis_TP <- addmf(fis_TP, "input", 3, "alta", "trimf", c(0.5,1,1))
fis_TP <- addmf(fis_TP, "output", 1, "baixa", "trimf", c(0,0,0.5))
fis_TP <- addmf(fis_TP, "output", 1, "media", "trimf", c(0,0.5,1))
fis_TP <- addmf(fis_TP, "output", 1, "alta", "trimf", c(0.5,1,1))
plotmf(fis_TP,"input",1)
plotmf(fis_TP,"input",2)
plotmf(fis_TP,"input",3)
plotmf(fis_TP,"output",1)
fis_TP <- newfis("Tanque Percolação")
#adiciona variaveis
fis_TP <- addvar(fis, "input", "CN", c(0,100))
fis_TP <- addvar(fis_TP, "input", "Declividade", c(0,160))
fis_TP <- addvar(fis_TP, "output", "TPercolacao", c(0,1))
#Cria Membership Functions
fis_TP <- addmf(fis_TP, "input", 1, "baixa", "trimf", c(0,0,60))
fis_TP <- addmf(fis_TP, "input", 1, "media", "trimf", c(0,60,100))
fis_TP <- addmf(fis_TP, "input", 1, "alta", "trimf", c(60,100,100))
fis_TP <- addmf(fis_TP, "input", 2, "baixa", "trimf", c(0,0,30))
fis_TP <- addvar(fis_TP, "input", "Permeabilidade", c(0,1))
fis_TP <- addmf(fis_TP, "input", 2, "media", "trimf", c(0,30,160))
fis_TP <- addmf(fis_TP, "input", 2, "alta", "trimf", c(30,160,160))
fis_TP <- addmf(fis_TP, "input", 3, "media", "trimf", c(0,0.5,1))
fis_TP <- addmf(fis_TP, "input", 3, "baixa", "trimf", c(0,0,0.5))
fis_TP <- addmf(fis_TP, "input", 3, "alta", "trimf", c(0.5,1,1))
plotmf(fis_TP,"input",1)
plotmf(fis_TP,"input",2)
plotmf(fis_TP,"input",3)
library("FuzzyR")
fis_TP <- newfis("Tanque Percolação")
#adiciona variaveis
fis_TP <- addvar(fis, "input", "CN", c(0,100))
#adiciona variaveis
fis_TP <- addvar(fis, "input", "CN", c(0,100))
fis_TP <- newfis("Tanque Percolação")
#adiciona variaveis
fis_TP <- addvar(fis_TP, "input", "CN", c(0,100))
fis_TP <- addvar(fis_TP, "input", "Declividade", c(0,160))
fis_TP <- addvar(fis_TP, "input", "Permeabilidade", c(0,1))
fis_TP <- addvar(fis_TP, "output", "TPercolacao", c(0,1))
#Cria Membership Functions
fis_TP <- addmf(fis_TP, "input", 1, "baixa", "trimf", c(0,0,60))
fis_TP <- addmf(fis_TP, "input", 1, "media", "trimf", c(0,60,100))
fis_TP <- addmf(fis_TP, "input", 1, "alta", "trimf", c(60,100,100))
fis_TP <- addmf(fis_TP, "input", 2, "baixa", "trimf", c(0,0,30))
fis_TP <- addmf(fis_TP, "input", 2, "media", "trimf", c(0,30,160))
fis_TP <- addmf(fis_TP, "input", 2, "alta", "trimf", c(30,160,160))
fis_TP <- addmf(fis_TP, "input", 3, "baixa", "trimf", c(0,0,0.5))
fis_TP <- addmf(fis_TP, "input", 3, "media", "trimf", c(0,0.5,1))
fis_TP <- addmf(fis_TP, "input", 3, "alta", "trimf", c(0.5,1,1))
fis_TP <- addmf(fis_TP, "output", 1, "baixa", "trimf", c(0,0,0.5))
fis_TP <- addmf(fis_TP, "output", 1, "media", "trimf", c(0,0.5,1))
fis_TP <- addmf(fis_TP, "output", 1, "alta", "trimf", c(0.5,1,1))
plotmf(fis_TP,"input",1)
plotmf(fis_TP,"input",2)
plotmf(fis_TP,"input",3)
plotmf(fis_TP,"output",1)
plotmf(fis_TP,"input",1)
plotmf(fis_TP,"input",2)
plotmf(fis_TP,"input",3)
plotmf(fis_TP,"output",1)
library("FuzzyR")
library("FuzzyR")
#cria FIS
fis <- newfis("Artigo Fuzzy")
#adiciona variaveis
fis <- addvar(fis, "input", "CN", c(0,100))
fis <- addvar(fis, "input", "Declividade", c(0,160))
fis <- addvar(fis, "input", "Permeabilidade", c(0,1))
fis <- addvar(fis, "output", "Percolacao", c(0,1))
fis <- addvar(fis, "output", "Barragem", c(0,1))
#Cria Membership Functions
fis <- addmf(fis, "input", 1, "baixa", "trimf", c(0,0,50))
fis <- addmf(fis, "input", 1, "media", "trimf", c(0,50,100))
fis <- addmf(fis, "input", 1, "alta", "trimf", c(50,100,100))
fis <- addmf(fis, "input", 2, "baixa", "trimf", c(0,0,80))
fis <- addmf(fis, "input", 2, "media", "trimf", c(0,80,160))
fis <- addmf(fis, "input", 2, "alta", "trimf", c(80,160,160))
fis <- addmf(fis, "input", 3, "baixa", "trimf", c(0,0,0.5))
fis <- addmf(fis, "input", 3, "media", "trimf", c(0,0.5,1))
fis <- addmf(fis, "input", 3, "alta", "trimf", c(0.5,1,1))
fis <- addmf(fis, "output", 1, "baixa", "trimf", c(0,0,0.5))
fis <- addmf(fis, "output", 1, "media", "trimf", c(0,0.5,1))
fis <- addmf(fis, "output", 1, "alta", "trimf", c(0.5,1,1))
fis <- addmf(fis, "output", 2, "baixa", "trimf", c(0,0,0.5))
fis <- addmf(fis, "output", 2, "media", "trimf", c(0,0.5,1))
fis <- addmf(fis, "output", 2, "alta", "trimf", c(0.5,1,1))
plotmf(fis,"input",1)
plotmf(fis,"input",2)
plotmf(fis,"input",3)
plotmf(fis,"output",1)
plotmf(fis,"output",2)
ruleList <- rbind(c(1,1,1,1,1,1,1),
c(1,1,2,1,1,1,1),
c(1,1,3,1,1,1,1),
c(1,2,1,1,1,1,1),
c(1,2,2,1,1,1,1),
c(1,2,3,1,1,1,1),
c(1,3,1,1,1,1,1),
c(1,3,2,1,1,1,1),
c(1,3,3,1,1,1,1),
c(2,1,1,1,1,1,1),
c(2,1,2,1,1,1,1),
c(2,1,3,1,1,1,1),
c(2,2,1,1,1,1,1),
c(2,2,2,1,1,1,1),
c(2,2,3,1,1,1,1),
c(2,3,1,1,1,1,1),
c(2,3,2,1,1,1,1),
c(2,3,3,1,1,1,1),
c(3,1,1,1,1,1,1),
c(3,1,2,1,1,1,1),
c(3,1,3,1,1,1,1),
c(3,2,1,1,1,1,1),
c(3,2,2,1,1,1,1),
c(3,2,3,1,1,1,1),
c(3,3,1,1,1,1,1),
c(3,3,2,1,1,1,1),
c(3,3,3,1,1,1,1)
)
fis <- addrule(fis,matrix(ruleList,ncol=7))
showfis(fis)
gensurf(fis)
showGUI(fis)
#cria FIS
fis <- readfis("Tanques.fis")
library("FuzzyR")
setwd("C:/Bitnami/wampstack-7.1.28-0/apache2/htdocs/LogicaFuzzy2019-2/ArtigoFinal")
#cria FIS
fis <- readfis("Tanques.fis")
setwd("C:/Bitnami/wampstack-7.1.28-0/apache2/htdocs/LogicaFuzzy2019-2/ArtigoFinal")
#cria FIS
fis <- readfis("Tanques.fis")
showGUI(fis)
showrule(fis)
showfis(fis)
fis <- addmf(fis, "output", 1, "baixa", "trimf", c(0,0,0.5))
fis <- addmf(fis, "output", 1, "media", "trimf", c(0,0.5,1))
fis <- addmf(fis, "output", 1, "alta", "trimf", c(0.5,1,1))
fis <- addmf(fis, "output", 2, "baixa", "trimf", c(0,0,0.5))
fis <- addmf(fis, "output", 2, "media", "trimf", c(0,0.5,1))
fis <- addmf(fis, "output", 2, "alta", "trimf", c(0.5,1,1))
showGUI(fis)
fis <- tipper()
library("FuzzyR")
fis <- tipper()
showGUI(fis)
fis <- addvar(fis, "output", "TPercolacao", c(0,1))
tipperGUI2()
