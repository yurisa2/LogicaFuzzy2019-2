c(2,3,2,2,1,1),
c(2,3,3,3,1,1),
c(3,1,1,1,1,1),
c(3,1,2,2,1,1),
c(3,1,3,3,1,1),
c(3,2,1,1,1,1),
c(3,2,2,2,1,1),
c(3,2,3,3,1,1),
c(3,3,1,1,1,1),
c(3,3,2,2,1,1),
c(3,3,3,3,1,1)
)
fis <- addrule(fis,matrix(ruleList,ncol=7))
fis <- addrule(fis,matrix(ruleList,ncol=6))
ruleList <- rbind(c(1,1,1,2,1,1),
c(1,1,2,2,1,1),
c(1,1,3,3,1,1),
c(1,2,1,1,1,1),
c(1,2,2,2,1,1),
c(1,2,3,3,1,1),
c(1,3,1,1,1,1),
c(1,3,2,2,1,1),
c(1,3,3,3,1,1),
c(2,1,1,1,1,1),
c(2,1,2,2,1,1),
c(2,1,3,3,1,1),
c(2,2,1,1,1,1),
c(2,2,2,2,1,1),
c(2,2,3,3,1,1),
c(2,3,1,1,1,1),
c(2,3,2,2,1,1),
c(2,3,3,3,1,1),
c(3,1,1,1,1,1),
c(3,1,2,2,1,1),
c(3,1,3,3,1,1),
c(3,2,1,1,1,1),
c(3,2,2,2,1,1),
c(3,2,3,3,1,1),
c(3,3,1,1,1,1),
c(3,3,2,2,1,1),
c(3,3,3,3,1,1)
)
fis <- addrule(fis,matrix(ruleList,ncol=6))
ruleList <- rbind(c(1,1,1,2,1,1),
c(1,1,2,2,1,1),
c(1,1,3,3,1,1),
c(1,2,1,1,1,1),
c(1,2,2,2,1,1),
c(1,2,3,3,1,1),
c(1,3,1,1,1,1),
c(1,3,2,2,1,1),
c(1,3,3,3,1,1),
c(2,1,1,1,1,1),
c(2,1,2,2,1,1),
c(2,1,3,3,1,1),
c(2,2,1,1,1,1),
c(2,2,2,2,1,1),
c(2,2,3,3,1,1),
c(2,3,1,1,1,1),
c(2,3,2,2,1,1),
c(2,3,3,3,1,1),
c(3,1,1,1,1,1),
c(3,1,2,2,1,1),
c(3,1,3,3,1,1),
c(3,2,1,1,1,1),
c(3,2,2,2,1,1),
c(3,2,3,3,1,1),
c(3,3,1,1,1,1),
c(3,3,2,2,1,1),
c(3,3,3,3,1,1)
)
fis <- addrule(fis,matrix(ruleList,ncol=6))
ruleList <- rbind(c(1,1,1,2,1,1),
c(1,1,2,2,1,1),
c(1,1,3,3,1,1),
c(1,2,1,1,1,1),
c(1,2,2,2,1,1),
c(1,2,3,3,1,1),
c(1,3,1,1,1,1),
c(1,3,2,2,1,1),
c(1,3,3,3,1,1),
c(2,1,1,1,1,1),
c(2,1,2,2,1,1),
c(2,1,3,3,1,1),
c(2,2,1,1,1,1),
c(2,2,2,2,1,1),
c(2,2,3,3,1,1),
c(2,3,1,1,1,1),
c(2,3,2,2,1,1),
c(2,3,3,3,1,1),
c(3,1,1,1,1,1),
c(3,1,2,2,1,1),
c(3,1,3,3,1,1),
c(3,2,1,1,1,1),
c(3,2,2,2,1,1),
c(3,2,3,3,1,1),
c(3,3,1,1,1,1),
c(3,3,2,2,1,1),
c(3,3,3,3,1,1)
)
fis <- addrule(fis,matrix(ruleList,ncol=6))
#cria FIS
fis <- newfis("Artigo Fuzzy")
#adiciona variaveis
fis <- addvar(fis, "input", "CN", c(0,100))
fis <- addvar(fis, "input", "Declividade", c(0,160))
fis <- addvar(fis, "input", "Permeabilidade", c(0,1))
fis <- addvar(fis, "output", "TPercolacao", c(0,1))
fis <- addvar(fis, "output", "TAgricola", c(0,1))
#Cria Membership Functions
fis <- addmf(fis, "input", 1, "baixa", "trimf", c(0,0,60))
fis <- addmf(fis, "input", 1, "media", "trimf", c(0,60,100))
fis <- addmf(fis, "input", 1, "alta", "trimf", c(60,100,100))
fis <- addmf(fis, "input", 2, "baixa", "trimf", c(0,0,30))
fis <- addmf(fis, "input", 2, "media", "trimf", c(0,30,160))
fis <- addmf(fis, "input", 2, "alta", "trimf", c(30,160,160))
fis <- addmf(fis, "input", 3, "baixa", "trimf", c(0,0,0.5))
fis <- addmf(fis, "input", 3, "media", "trimf", c(0,0.5,1))
fis <- addmf(fis, "input", 3, "alta", "trimf", c(0.5,1,1))
fis <- addmf(fis, "output", 1, "baixa", "trimf", c(0,0,0.5))
fis <- addmf(fis, "output", 1, "media", "trimf", c(0,0.5,1))
fis <- addmf(fis, "output", 1, "alta", "trimf", c(0.5,1,1))
plotmf(fis,"input",1)
plotmf(fis,"input",2)
plotmf(fis,"input",3)
plotmf(fis,"output",1)
ruleList <- rbind(c(1,1,1,2,1,1),
c(1,1,2,2,1,1),
c(1,1,3,3,1,1),
c(1,2,1,1,1,1),
c(1,2,2,2,1,1),
c(1,2,3,3,1,1),
c(1,3,1,1,1,1),
c(1,3,2,2,1,1),
c(1,3,3,3,1,1),
c(2,1,1,1,1,1),
c(2,1,2,2,1,1),
c(2,1,3,3,1,1),
c(2,2,1,1,1,1),
c(2,2,2,2,1,1),
c(2,2,3,3,1,1),
c(2,3,1,1,1,1),
c(2,3,2,2,1,1),
c(2,3,3,3,1,1),
c(3,1,1,1,1,1),
c(3,1,2,2,1,1),
c(3,1,3,3,1,1),
c(3,2,1,1,1,1),
c(3,2,2,2,1,1),
c(3,2,3,3,1,1),
c(3,3,1,1,1,1),
c(3,3,2,2,1,1),
c(3,3,3,3,1,1)
)
fis <- addrule(fis,matrix(ruleList,ncol=6))
showrule(fis)
rm(fis)
#cria FIS
fis <- newfis("Artigo Fuzzy")
#adiciona variaveis
fis <- addvar(fis, "input", "CN", c(0,100))
fis <- addvar(fis, "input", "Declividade", c(0,160))
fis <- addvar(fis, "input", "Permeabilidade", c(0,1))
fis <- addvar(fis, "output", "TPercolacao", c(0,1))
fis <- addvar(fis, "output", "TAgricola", c(0,1))
#Cria Membership Functions
fis <- addmf(fis, "input", 1, "baixa", "trimf", c(0,0,60))
fis <- addmf(fis, "input", 1, "media", "trimf", c(0,60,100))
fis <- addmf(fis, "input", 1, "alta", "trimf", c(60,100,100))
fis <- addmf(fis, "input", 2, "baixa", "trimf", c(0,0,30))
fis <- addmf(fis, "input", 2, "media", "trimf", c(0,30,160))
fis <- addmf(fis, "input", 2, "alta", "trimf", c(30,160,160))
fis <- addmf(fis, "input", 3, "baixa", "trimf", c(0,0,0.5))
fis <- addmf(fis, "input", 3, "media", "trimf", c(0,0.5,1))
fis <- addmf(fis, "input", 3, "alta", "trimf", c(0.5,1,1))
fis <- addmf(fis, "output", 1, "baixa", "trimf", c(0,0,0.5))
fis <- addmf(fis, "output", 1, "media", "trimf", c(0,0.5,1))
fis <- addmf(fis, "output", 1, "alta", "trimf", c(0.5,1,1))
plotmf(fis,"input",1)
plotmf(fis,"input",2)
plotmf(fis,"input",3)
plotmf(fis,"output",1)
ruleList <- rbind(c(1,1,1,2,1,1),
c(1,1,2,2,1,1),
c(1,1,3,3,1,1),
c(1,2,1,1,1,1),
c(1,2,2,2,1,1),
c(1,2,3,3,1,1),
c(1,3,1,1,1,1),
c(1,3,2,2,1,1),
c(1,3,3,3,1,1),
c(2,1,1,1,1,1),
c(2,1,2,2,1,1),
c(2,1,3,3,1,1),
c(2,2,1,1,1,1),
c(2,2,2,2,1,1),
c(2,2,3,3,1,1),
c(2,3,1,1,1,1),
c(2,3,2,2,1,1),
c(2,3,3,3,1,1),
c(3,1,1,1,1,1),
c(3,1,2,2,1,1),
c(3,1,3,3,1,1),
c(3,2,1,1,1,1),
c(3,2,2,2,1,1),
c(3,2,3,3,1,1),
c(3,3,1,1,1,1),
c(3,3,2,2,1,1),
c(3,3,3,3,1,1)
)
fis <- addrule(fis,matrix(ruleList,ncol=6))
showrule(fis)
library("sf")
library("FuzzyR")
setwd("C:/Bitnami/wampstack-7.1.28-0/apache2/htdocs/LogicaFuzzy2019-2/ArtigoFinal")
CN <- read_sf("ShapeFiles/pontos_CN.shp")
Declividade <- read_sf("ShapeFiles/Declividade.shp")
Permeabilidade <- read_sf("ShapeFiles/permeabi.shp")
n_lines <- min(nrow(CN), nrow(Declividade),  nrow(Permeabilidade))
CN <- CN[1:n_lines,]
Declividade <- Declividade[1:n_lines,]
Permeabilidade <- Permeabilidade[1:n_lines,]
summary(CN$grid_code)
summary(Declividade$grid_code)
summary(Permeabilidade$grid_code)
result <- CN
#cria FIS
fis <- newfis("Artigo Fuzzy")
#adiciona variaveis
fis <- addvar(fis, "input", "CN", c(0,100))
fis <- addvar(fis, "input", "Declividade", c(0,160))
fis <- addvar(fis, "input", "Permeabilidade", c(0,1))
fis <- addvar(fis, "output", "TPercolacao", c(0,1))
fis <- addvar(fis, "output", "TAgricola", c(0,1))
#Cria Membership Functions
fis <- addmf(fis, "input", 1, "baixa", "trimf", c(0,0,60))
fis <- addmf(fis, "input", 1, "media", "trimf", c(0,60,100))
fis <- addmf(fis, "input", 1, "alta", "trimf", c(60,100,100))
fis <- addmf(fis, "input", 2, "baixa", "trimf", c(0,0,30))
fis <- addmf(fis, "input", 2, "media", "trimf", c(0,30,160))
fis <- addmf(fis, "input", 2, "alta", "trimf", c(30,160,160))
fis <- addmf(fis, "input", 3, "baixa", "trimf", c(0,0,0.5))
fis <- addmf(fis, "input", 3, "media", "trimf", c(0,0.5,1))
fis <- addmf(fis, "input", 3, "alta", "trimf", c(0.5,1,1))
fis <- addmf(fis, "output", 1, "baixa", "trimf", c(0,0,0.5))
fis <- addmf(fis, "output", 1, "media", "trimf", c(0,0.5,1))
fis <- addmf(fis, "output", 1, "alta", "trimf", c(0.5,1,1))
plotmf(fis,"input",1)
plotmf(fis,"input",2)
plotmf(fis,"input",3)
plotmf(fis,"output",1)
ruleList <- rbind(c(1,1,1,2,1,1),
c(1,1,2,2,1,1),
c(1,1,3,3,1,1),
c(1,2,1,1,1,1),
c(1,2,2,2,1,1),
c(1,2,3,3,1,1),
c(1,3,1,1,1,1),
c(1,3,2,2,1,1),
c(1,3,3,3,1,1),
c(2,1,1,1,1,1),
c(2,1,2,2,1,1),
c(2,1,3,3,1,1),
c(2,2,1,1,1,1),
c(2,2,2,2,1,1),
c(2,2,3,3,1,1),
c(2,3,1,1,1,1),
c(2,3,2,2,1,1),
c(2,3,3,3,1,1),
c(3,1,1,1,1,1),
c(3,1,2,2,1,1),
c(3,1,3,3,1,1),
c(3,2,1,1,1,1),
c(3,2,2,2,1,1),
c(3,2,3,3,1,1),
c(3,3,1,1,1,1),
c(3,3,2,2,1,1),
c(3,3,3,3,1,1)
)
fis <- addrule(fis,matrix(ruleList,ncol=6))
showrule(fis)
showfis(fis)
par(mfrow=c(1,1))
gensurf(fis)
entrada <- cbind(CN$grid_code,Declividade$grid_code,Permeabilidade$grid_code)
entrada <- matrix(entrada, ncol = 3)
str(entrada)
summary(entrada)
resultado <- evalfis(entrada,fis)
str(entrada)
summary(entrada)
resultado <- evalfis(entrada,fis)
showfis(fis)
showrule(fis)
ruleList
#cria FIS
fis <- newfis("Artigo Fuzzy")
#adiciona variaveis
fis <- addvar(fis, "input", "CN", c(0,100))
fis <- addvar(fis, "input", "Declividade", c(0,160))
fis <- addvar(fis, "input", "Permeabilidade", c(0,1))
fis <- addvar(fis, "output", "TPercolacao", c(0,1))
#Cria Membership Functions
fis <- addmf(fis, "input", 1, "baixa", "trimf", c(0,0,60))
fis <- addmf(fis, "input", 1, "media", "trimf", c(0,60,100))
fis <- addmf(fis, "input", 2, "baixa", "trimf", c(0,0,30))
fis <- addmf(fis, "input", 3, "baixa", "trimf", c(0,0,0.5))
fis <- addmf(fis, "input", 2, "alta", "trimf", c(30,160,160))
fis <- addmf(fis, "output", 1, "baixa", "trimf", c(0,0,0.5))
fis <- addmf(fis, "output", 1, "media", "trimf", c(0,0.5,1))
fis <- addmf(fis, "input", 1, "alta", "trimf", c(60,100,100))
fis <- addmf(fis, "input", 2, "media", "trimf", c(0,30,160))
plotmf(fis,"input",1)
plotmf(fis,"input",2)
fis <- addmf(fis, "input", 3, "alta", "trimf", c(0.5,1,1))
plotmf(fis,"input",3)
fis <- addrule(fis,matrix(ruleList,ncol=6))
showrule(fis)
showfis(fis)
ruleList <- rbind(c(1,1,1,2,1,1),
c(1,1,2,2,1,1),
c(1,1,3,3,1,1),
c(1,2,1,1,1,1),
c(1,2,2,2,1,1),
c(1,2,3,3,1,1),
c(1,3,1,1,1,1),
c(1,3,2,2,1,1),
c(1,3,3,3,1,1),
c(2,1,1,1,1,1),
c(2,1,2,2,1,1),
c(2,1,3,3,1,1),
c(2,2,1,1,1,1),
c(2,2,2,2,1,1),
c(2,2,3,3,1,1),
c(2,3,1,1,1,1),
c(2,3,2,2,1,1),
c(2,3,3,3,1,1),
c(3,1,1,1,1,1),
c(3,1,2,2,1,1),
c(3,1,3,3,1,1),
c(3,2,1,1,1,1),
c(3,2,2,2,1,1),
c(3,2,3,3,1,1),
c(3,3,1,1,1,1),
c(3,3,2,2,1,1),
c(3,3,3,3,1,1)
)
plotmf(fis,"output",1)
fis <- addmf(fis, "output", 1, "alta", "trimf", c(0.5,1,1))
fis <- addmf(fis, "input", 3, "media", "trimf", c(0,0.5,1))
showrule(fis)
plotmf(fis,"output",1)
plotmf(fis,"output",1)
resultado <- evalfis(entrada,fis)
resultado
resultadoTPerc <- resultado
library("sf")
library("FuzzyR")
setwd("C:/Bitnami/wampstack-7.1.28-0/apache2/htdocs/LogicaFuzzy2019-2/ArtigoFinal")
CN <- read_sf("ShapeFiles/pontos_CN.shp")
Declividade <- read_sf("ShapeFiles/Declividade.shp")
library("sf")
library("FuzzyR")
setwd("C:/Bitnami/wampstack-7.1.28-0/apache2/htdocs/LogicaFuzzy2019-2/ArtigoFinal")
CN <- read_sf("ShapeFiles/pontos_CN.shp")
Declividade <- read_sf("ShapeFiles/Declividade.shp")
Permeabilidade <- read_sf("ShapeFiles/permeabi.shp")
# Pego o mÃ­nimo de linhas dos 3
n_lines <- min(nrow(CN), nrow(Declividade),  nrow(Permeabilidade))
# Aqui eu Deixo todos do mesmo tamanho
CN <- CN[1:n_lines,]
Declividade <- Declividade[1:n_lines,]
Permeabilidade <- Permeabilidade[1:n_lines,]
# ResumÃ£o de cada um
summary(CN$grid_code)
summary(Declividade$grid_code)
summary(Permeabilidade$grid_code)
# cria FIS PERCOLACAO COM dois FIS o processamento Ã© mais rÃ¡pido
# (mas a gente pode dizer que foi um SÃ³, sem crise)
fis_TP <- newfis("Tanque PercolaÃ§Ã£o")
#adiciona variaveis
fis_TP <- addvar(fis, "input", "CN", c(0,100))
fis_TP <- addvar(fis_TP, "input", "Declividade", c(0,160))
fis_TP <- addvar(fis_TP, "input", "Permeabilidade", c(0,1))
fis_TP <- addvar(fis_TP, "output", "TPercolacao", c(0,1))
#Cria Membership Functions
fis_TP <- addmf(fis_TP, "input", 1, "baixa", "trimf", c(0,0,60))
fis_TP <- addmf(fis_TP, "input", 1, "media", "trimf", c(0,60,100))
fis_TP <- addmf(fis_TP, "input", 1, "alta", "trimf", c(60,100,100))
fis_TP <- addmf(fis_TP, "input", 2, "baixa", "trimf", c(0,0,30))
fis_TP <- addmf(fis_TP, "input", 2, "media", "trimf", c(0,30,160))
fis_TP <- addmf(fis_TP, "input", 2, "alta", "trimf", c(30,160,160))
fis_TP <- addmf(fis_TP, "input", 3, "baixa", "trimf", c(0,0,0.5))
fis_TP <- addmf(fis_TP, "input", 3, "media", "trimf", c(0,0.5,1))
fis_TP <- addmf(fis_TP, "input", 3, "alta", "trimf", c(0.5,1,1))
fis_TP <- addmf(fis_TP, "output", 1, "baixa", "trimf", c(0,0,0.5))
fis_TP <- addmf(fis_TP, "output", 1, "media", "trimf", c(0,0.5,1))
fis_TP <- addmf(fis_TP, "output", 1, "alta", "trimf", c(0.5,1,1))
plotmf(fis_TP,"input",1)
plotmf(fis_TP,"input",2)
plotmf(fis_TP,"input",3)
plotmf(fis_TP,"output",1)
ruleList <- rbind(c(1,1,1,2,1,1),
c(1,1,2,2,1,1),
c(1,1,3,3,1,1),
c(1,2,1,1,1,1),
c(1,2,2,2,1,1),
c(1,2,3,3,1,1),
c(1,3,1,1,1,1),
c(1,3,2,2,1,1),
c(1,3,3,3,1,1),
c(2,1,1,1,1,1),
c(2,1,2,2,1,1),
c(2,1,3,3,1,1),
c(2,2,1,1,1,1),
c(2,2,2,2,1,1),
c(2,2,3,3,1,1),
c(2,3,1,1,1,1),
c(2,3,2,2,1,1),
c(2,3,3,3,1,1),
c(3,1,1,1,1,1),
c(3,1,2,2,1,1),
c(3,1,3,3,1,1),
c(3,2,1,1,1,1),
c(3,2,2,2,1,1),
c(3,2,3,3,1,1),
c(3,3,1,1,1,1),
c(3,3,2,2,1,1),
c(3,3,3,3,1,1)
)
fis_TP <- addrule(fis_TP,matrix(ruleList,ncol=6)) # Adiciona as regras
# showrule(fis_TP) # Mostra As regras
#cria FIS TANQUE AGRICOLA
fis_TA <- newfis("Tanque Agricola")
#adiciona variaveis
fis_TA <- addvar(fis_TA, "input", "CN", c(0,100))
fis_TA <- addvar(fis_TA, "input", "Declividade", c(0,160))
fis_TA <- addvar(fis_TA, "input", "Permeabilidade", c(0,1))
fis_TA <- addvar(fis_TA, "output", "TPercolacao", c(0,1))
#Cria Membership Functions
fis_TA <- addmf(fis_TA, "input", 1, "baixa", "trimf", c(0,0,60))
fis_TA <- addmf(fis_TA, "input", 1, "media", "trimf", c(0,60,100))
fis_TA <- addmf(fis_TA, "input", 1, "alta", "trimf", c(60,100,100))
fis_TA <- addmf(fis_TA, "input", 2, "baixa", "trimf", c(0,0,30))
fis_TA <- addmf(fis_TA, "input", 2, "media", "trimf", c(0,30,160))
fis_TA <- addmf(fis_TA, "input", 2, "alta", "trimf", c(30,160,160))
fis_TA <- addmf(fis_TA, "input", 3, "baixa", "trimf", c(0,0,0.5))
fis_TA <- addmf(fis_TA, "input", 3, "media", "trimf", c(0,0.5,1))
fis_TA <- addmf(fis_TA, "input", 3, "alta", "trimf", c(0.5,1,1))
fis_TA <- addmf(fis_TA, "output", 1, "baixa", "trimf", c(0,0,0.5))
fis_TA <- addmf(fis_TA, "output", 1, "media", "trimf", c(0,0.5,1))
fis_TA <- addmf(fis_TA, "output", 1, "alta", "trimf", c(0.5,1,1))
plotmf(fis_TA,"input",1)
plotmf(fis_TA,"input",2)
plotmf(fis_TA,"input",3)
plotmf(fis_TA,"output",1)
ruleList <- rbind(c(1,1,1,2,1,1),
c(1,1,2,2,1,1),
c(1,1,3,1,1,1),
c(1,2,1,2,1,1),
c(1,2,2,2,1,1),
c(1,2,3,1,1,1),
c(1,3,1,3,1,1),
c(1,3,2,2,1,1),
c(1,3,3,1,1,1),
c(2,1,1,3,1,1),
c(2,1,2,2,1,1),
c(2,1,3,1,1,1),
c(2,2,1,3,1,1),
c(2,2,2,2,1,1),
c(2,2,3,1,1,1),
c(2,3,1,3,1,1),
c(2,3,2,2,1,1),
c(2,3,3,1,1,1),
c(3,1,1,3,1,1),
c(3,1,2,2,1,1),
c(3,1,3,1,1,1),
c(3,2,1,3,1,1),
c(3,2,2,2,1,1),
c(3,2,3,1,1,1),
c(3,3,1,3,1,1),
c(3,3,2,2,1,1),
c(3,3,3,1,1,1)
)
fis_TA <- addrule(fis_TA,matrix(ruleList,ncol=6))
# showrule(fis_TA) # Mostra As regras
# Tudo Lido, modelos criados, vamos executar
# Cria uma entrada para os FIS's
entrada <- cbind(CN$grid_code,Declividade$grid_code,Permeabilidade$grid_code)
entrada <- matrix(entrada, ncol = 3)
# VerificaÃ§Ãµes da Entrada
str(entrada)
summary(entrada)
# Executa os FIS
resultadoTAgr <- evalfis(entrada,fis_TA)
resultadoTPerc <- evalfis(entrada,fis_TP)
fis_TA <- addrule(fis_TA,matrix(ruleList,ncol=6))
resultadoTPerc
resultadoTAgr
shp_TA <- CN
shp_TP <- CN
str(resultadoTAgr)
shp_TA$grid_code <- resultadoTAgr
shp_TP$grid_code <- resultadoTPerc
str(shp_TA)
plot(shp_TA)
st_write(shp_TA, "output/shp_TA.shp")
st_write(shp_TP, "output/shp_TP.shp")
st_write(shp_TA, "output\shp_TA.shp")
st_write(shp_TA, "output/shp_TA.shp")
st_write(shp_TA, "ShapeFiles/output/shp_TA.shp")
st_write(shp_TP, "ShapeFiles/output/shp_TP.shp")
